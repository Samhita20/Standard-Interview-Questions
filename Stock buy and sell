Stock buy and sell

The cost of stock on each day is given in an array A[] of size N. Find all the days on which you buy and sell the stock so that in between those days your profit is maximum.

class Solution:
	def stockBuySell(self, a, n):
		#code here
		ans = []
        if(n==1):
            return
        i = 0
        while(i<(n-1)):
            while((i<(n-1)) and a[i+1]<=a[i]):
                i += 1
            if(i==n-1):
                break
            buy = i
            i += 1
            while(i<n and a[i]>=a[i-1]):
                i += 1
            sell = i -1
            tup = (buy,sell)
            ans.append(tup)
        return ans
